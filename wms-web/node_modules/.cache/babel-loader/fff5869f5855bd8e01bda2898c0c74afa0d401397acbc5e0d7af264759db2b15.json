{"ast":null,"code":"// import axios from \"axios\";axios\n\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: 'StorageManage',\n  data() {\n    //校验年龄\n    // let checkAge = (rule, value, callback) => {\n    //   if (value > 150) {\n    //     callback(new Error('年龄输⼊过⼤'));\n    //   } else {\n    //     callback();\n    //   }\n    // };\n\n    //校验账号是否已存在\n    let checkDuplicate = (rule, value, callback) => {\n      if (this.form.id) {\n        return callback();\n      }\n      this.$axios.get(this.$httpUrl + \"/user/findByNo?no=\" + this.form.no).then(res => res.data).then(res => {\n        if (res.code !== 200) {\n          callback();\n        } else {\n          callback(new Error('账号已经存在'));\n        }\n      });\n    };\n\n    //校验密码\n    let validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.form.checkPass !== '') {\n          this.$refs.form.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    //校验两次密码是否一致\n    let validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.form.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      is_add: true,\n      title_name: '',\n      list_loading: false,\n      tableData: [],\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n      name: '',\n      centerDialogVisible: false,\n      form: {\n        name: '',\n        remark: ''\n      },\n      //表单输入规则\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入仓库名',\n          trigger: 'blur'\n        }],\n        no: [{\n          required: true,\n          message: '请输入备注',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 8,\n          message: '长度在 3 到 8 个字符',\n          trigger: 'blur'\n        }, {\n          validator: checkDuplicate,\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 8,\n          message: '长度在 3 到 8 个字符',\n          trigger: 'blur'\n        }, {\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 8,\n          message: '长度在 3 到 8 个字符',\n          trigger: 'blur'\n        }, {\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        age: [{\n          required: true,\n          message: '请输⼊年龄',\n          trigger: 'blur'\n        }\n        // {min: 0, max: 150, message: '年龄必须在 1-150 之间', trigger: 'blur'},\n        // {pattern: /^([1-9][0-9]*){1,3}$/, message: '年龄必须为正整数字', trigger: \"blur\"},\n        // {validator: checkAge, trigger: 'blur'}\n        ],\n\n        phone: [{\n          required: true,\n          message: \"⼿机号不能为空\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^1[3|4|5|6|7|8|9][0-9]\\d{8}$/,\n          message: \"请输⼊正确的⼿机号码\",\n          trigger: \"blur\"\n        }],\n        sex: [{\n          required: true,\n          message: \"请选择性别\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  beforeMount() {\n    this.loadPost();\n  },\n  methods: {\n    //点击表单的取消按钮，清除验证结果\n\n    loadPost() {\n      this.list_loading = true;\n      this.$axios.post(this.$httpUrl + '/storage/listPage1', {\n        param: {\n          name: this.name\n        },\n        pageNum: this.pageNum,\n        pageSize: this.pageSize\n      }).then(res => res.data).then(res => {\n        console.log(res.data);\n        if (res.code === 200) {\n          //判断状态码是否200\n          //结果集的数据传入tableData\n          this.tableData = res.data;\n          this.total = res.total;\n        } else {\n          alert(\"查询失败\" + res.code);\n        }\n        this.list_loading = false;\n        // this.tableData=res.data\n        // console.log(res)\n      }).catch(e => {\n        console.log(e);\n        this.list_loading = false;\n      });\n    },\n    //查询\n    search() {\n      //每次查询后显示第一页\n      this.pageNum = 1;\n      this.loadPost();\n    },\n    //重置参数\n    reSet() {\n      this.name = '';\n      this.loadPost();\n    },\n    //新增\n    add() {\n      this.title_name = '新增';\n      this.centerDialogVisible = true;\n      this.is_add = true;\n      this.$nextTick(() => {\n        this.resetForm();\n      });\n    },\n    //点击编辑按钮，从表格拿到数据传给form\n    mod(row) {\n      this.title_name = '编辑';\n      this.is_add = false;\n      this.form.id = row.id;\n      this.form.name = row.name;\n      this.form.remark = row.remark;\n      // this.rules.password[0].required=false;\n      // this.rules.checkPass.required=false;\n      this.centerDialogVisible = true;\n    },\n    //删除\n    del(id, name) {\n      console.log(id);\n      this.$confirm('是否删除当前用户信息？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n        closeOnClickModal: false\n      }).then(() => {\n        //  接口 点击确定就会走then\n        this.$axios.get(this.$httpUrl + '/storage/delete?id=' + id);\n        this.$message({\n          message: '删除仓库[' + name + ']成功~~~~~~~~~~~~~~~~~',\n          type: 'success'\n        });\n        console.log('dedede', name);\n        this.loadPost();\n      }).catch(e => {\n        // 取消就会走catch\n        console.log(e);\n      });\n    },\n    save() {\n      //输入格式正确则保存\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          console.log(this.form);\n          //开始保存\n          this.$axios.post(this.$httpUrl + '/storage/save', this.form).then(res => res.data).then(res => {\n            console.log(res.data);\n            if (res.code === 200) {\n              //判断状态码是否200\n              if (this.is_add) {\n                this.$message({\n                  message: '新增仓库成功~~~',\n                  type: 'success'\n                });\n              } else {\n                this.$message({\n                  message: '修改仓库信息成功~~~',\n                  type: 'success'\n                });\n              }\n              this.loadPost();\n              this.centerDialogVisible = false;\n            } else {\n              //状态码不为200，保存失败\n              this.$message({\n                message: '新增仓库失败！！！',\n                type: 'error'\n              });\n            }\n          });\n        } else {\n          this.$message({\n            message: \"请规范填写信息\",\n            type: 'error'\n          });\n          return false;\n        }\n      });\n    },\n    closeDialog() {\n      this.centerDialogVisible = false;\n      this.$refs.form.clearValidate();\n    },\n    resetForm() {\n      this.$refs.form.resetFields();\n    },\n    handleSizeChange(val) {\n      console.log(`每页 ${val} 条`);\n      this.pageSize = val;\n      this.pageNum = 1;\n      this.loadPost();\n    },\n    handleCurrentChange(val) {\n      console.log(`当前页: ${val}`);\n      this.pageNum = val;\n      this.loadPost();\n    }\n  }\n};","map":{"version":3,"mappings":"AAgFA;;AAEA;EAEA;EACAA;EACAC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAGA;IACA;MACA;QACA;MACA;MACA;QACA;UACAC;QACA;UACAA;QACA;MACA;IACA;;IAEA;IACA;MACA;QACAA;MACA;QACA;UACA;QACA;QACAA;MACA;IACA;IACA;IACA;MACA;QACAA;MACA;QACAA;MACA;QACAA;MACA;IACA;IAEA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAT;MAGAU;MACAC;QACAX;QACAY;MACA;MACA;MACAC;QACAb,OACA;UAAAc;UAAAC;UAAAC;QAAA,EACA;QACAC,KACA;UAAAH;UAAAC;UAAAC;QAAA,GACA;UAAAE;UAAAC;UAAAJ;UAAAC;QAAA,GACA;UAAAI;UAAAJ;QAAA,EACA;QACAK,WACA;UAAAP;UAAAC;UAAAC;QAAA,GACA;UAAAE;UAAAC;UAAAJ;UAAAC;QAAA,GACA;UAAAI;UAAAJ;QAAA,EACA;QACAM,YACA;UAAAR;UAAAC;UAAAC;QAAA,GACA;UAAAE;UAAAC;UAAAJ;UAAAC;QAAA,GACA;UAAAI;UAAAJ;QAAA,EACA;QACAO,MACA;UAAAT;UAAAC;UAAAC;QAAA;QACA;QACA;QACA;QAAA,CACA;;QACAQ,QACA;UAAAV;UAAAC;UAAAC;QAAA,GACA;UAAAS;UAAAV;UAAAC;QAAA,EACA;QACAU,MACA;UAAAZ;UAAAC;UAAAC;QAAA;MAEA;IACA;EACA;EACAW;IAEA;EACA;EACAC;IAEA;;IAEAC;MAEA;MACA;QACAC;UACA9B;QACA;QACAO;QACAC;MACA;QACAuB;QACA;UAAA;UACA;UACA;UACA;QACA;UACAC;QACA;QACA;QACA;QACA;MACA;QACAD;QACA;MACA;IACA;IAEA;IACAE;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;MACA;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAEA;IACA;IACAC;MACAN;MACA;QACAO;QACAC;QACAC;QACAC;MACA;QACA;QACA;QACA;UACA1B;UACAyB;QACA;QACAT;QACA;MAEA;QACA;QACAA;MACA;IACA;IACAW;MACA;MACA;QACA;UACAX;UACA;UACA;YACAA;YACA;cAAA;cACA;gBACA;kBACAhB;kBACAyB;gBACA;cACA;gBACA;kBACAzB;kBACAyB;gBACA;cACA;cAEA;cACA;YACA;cACA;cACA;gBACAzB;gBACAyB;cACA;YACA;UACA;QACA;UACA;YACAzB;YACAyB;UACA;UACA;QACA;MACA;IAGA;IACAG;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACAd;MACA;MACA;MACA;IACA;IACAe;MACAf;MACA;MACA;IACA;EACA;AAEA","names":["name","data","callback","is_add","title_name","list_loading","tableData","pageNum","pageSize","total","centerDialogVisible","form","remark","rules","required","message","trigger","no","min","max","validator","password","checkPass","age","phone","pattern","sex","beforeMount","methods","loadPost","param","console","alert","search","reSet","add","mod","del","confirmButtonText","cancelButtonText","type","closeOnClickModal","save","closeDialog","resetForm","handleSizeChange","handleCurrentChange"],"sourceRoot":"src/components/storage","sources":["StorageManage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"margin-bottom: 5px\">\r\n      <span style=\"margin-left: 5px;font-size: 14px;color: #3f3f3f\">仓库：</span>\r\n      <el-input placeholder=\"请输入仓库名\"\r\n                v-model=\"name\"\r\n                suffix-icon=\"el-icon-search\"\r\n                style=\"width: 160px\"\r\n                @keyup.enter.native=\"search\">\r\n      </el-input>\r\n\r\n      <el-button style=\"margin-left: 5px\" round @click=\"search\" type=\"primary\">查询</el-button>\r\n      <el-button type=\"success\" round @click=\"reSet\">重置</el-button>\r\n      <el-button type=\"success\" round @click=\"add\">新增</el-button>\r\n    </div>\r\n\r\n    <el-table v-loading=\"list_loading\"\r\n              height=550\r\n              style=\"font-size: 15px\"\r\n              :data=\"tableData\"\r\n              :header-cell-style=\"{background:'#d7d7d7',color:'#564d4d'}\"\r\n              border>\r\n      <el-table-column prop=\"id\" label=\"id\" sortable width=\"80\"></el-table-column>\r\n      <el-table-column prop=\"name\" label=\"仓库名\" sortable width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"remark\" label=\"备注\" sortable width=\"180\"></el-table-column>\r\n\r\n      <el-table-column prop=\"operation\" label=\"操作\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"success\" round @click=\"mod(scope.row)\">编辑</el-button>\r\n          <el-button type=\"danger\" round @click=\"del(scope.row.id,scope.row.name)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n      <template slot=\"empty\">\r\n        <el-empty :image-size=\"180\"></el-empty>\r\n      </template>\r\n\r\n    </el-table>\r\n    <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"pageNum\"\r\n        :page-sizes=\"[10,20,50, 100, 200]\"\r\n        :page-size=\"pageSize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\">\r\n    </el-pagination>\r\n    <el-dialog\r\n        :title=\"title_name\"\r\n        :visible.sync=\"centerDialogVisible\"\r\n        :close-on-click-modal=\"false\"\r\n        width=\"30%\"\r\n        center\r\n        :before-close=\"closeDialog\"\r\n\r\n    >\r\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\r\n        <el-form-item label=\"仓库名\" prop=\"name\">\r\n          <el-col :span=\"15\">\r\n            <el-input v-model=\"form.name\"></el-input>\r\n          </el-col>\r\n        </el-form-item>\r\n        <el-form-item label=\"备注\" prop=\"remark\">\r\n          <el-col :span=\"15\">\r\n            <el-input v-model=\"form.remark\"></el-input>\r\n          </el-col>\r\n        </el-form-item>\r\n\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n    <el-button @click=\"closeDialog\">取 消</el-button>\r\n    <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n  </span>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\n// import axios from \"axios\";axios\r\n\r\nexport default {\r\n\r\n  // eslint-disable-next-line vue/multi-word-component-names\r\n  name: 'StorageManage',\r\n  data() {\r\n    //校验年龄\r\n    // let checkAge = (rule, value, callback) => {\r\n    //   if (value > 150) {\r\n    //     callback(new Error('年龄输⼊过⼤'));\r\n    //   } else {\r\n    //     callback();\r\n    //   }\r\n    // };\r\n\r\n\r\n    //校验账号是否已存在\r\n    let checkDuplicate = (rule, value, callback) => {\r\n      if (this.form.id) {\r\n        return callback();\r\n      }\r\n      this.$axios.get(this.$httpUrl + \"/user/findByNo?no=\" + this.form.no).then(res => res.data).then(res => {\r\n        if (res.code !== 200) {\r\n          callback()\r\n        } else {\r\n          callback(new Error('账号已经存在'));\r\n        }\r\n      })\r\n    };\r\n\r\n    //校验密码\r\n    let validatePass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'));\r\n      } else {\r\n        if (this.form.checkPass !== '') {\r\n          this.$refs.form.validateField('checkPass');\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    //校验两次密码是否一致\r\n    let validatePass2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'));\r\n      } else if (value !== this.form.password) {\r\n        callback(new Error('两次输入密码不一致!'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    return {\r\n      is_add: true,\r\n      title_name: '',\r\n      list_loading: false,\r\n      tableData: [],\r\n      pageNum: 1,\r\n      pageSize: 10,\r\n      total: 0,\r\n      name: '',\r\n\r\n\r\n      centerDialogVisible: false,\r\n      form: {\r\n        name: '',\r\n        remark: ''\r\n      },\r\n      //表单输入规则\r\n      rules: {\r\n        name: [\r\n          {required: true, message: '请输入仓库名', trigger: 'blur'},\r\n        ],\r\n        no: [\r\n          {required: true, message: '请输入备注', trigger: 'blur'},\r\n          {min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur'},\r\n          {validator: checkDuplicate, trigger: \"blur\"}\r\n        ],\r\n        password: [\r\n          {required: true, message: '请输入密码', trigger: 'blur'},\r\n          {min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur'},\r\n          {validator: validatePass, trigger: 'blur'}\r\n        ],\r\n        checkPass: [\r\n          {required: true, message: '请输入密码', trigger: 'blur'},\r\n          {min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur'},\r\n          {validator: validatePass2, trigger: 'blur'}\r\n        ],\r\n        age: [\r\n          {required: true, message: '请输⼊年龄', trigger: 'blur'},\r\n          // {min: 0, max: 150, message: '年龄必须在 1-150 之间', trigger: 'blur'},\r\n          // {pattern: /^([1-9][0-9]*){1,3}$/, message: '年龄必须为正整数字', trigger: \"blur\"},\r\n          // {validator: checkAge, trigger: 'blur'}\r\n        ],\r\n        phone: [\r\n          {required: true, message: \"⼿机号不能为空\", trigger: \"blur\"},\r\n          {pattern: /^1[3|4|5|6|7|8|9][0-9]\\d{8}$/, message: \"请输⼊正确的⼿机号码\", trigger: \"blur\"}\r\n        ],\r\n        sex: [\r\n          {required: true, message: \"请选择性别\", trigger: \"blur\"}\r\n        ]\r\n      },\r\n    }\r\n  },\r\n  beforeMount() {\r\n\r\n    this.loadPost();\r\n  },\r\n  methods: {\r\n\r\n    //点击表单的取消按钮，清除验证结果\r\n\r\n    loadPost() {\r\n\r\n      this.list_loading = true\r\n      this.$axios.post(this.$httpUrl + '/storage/listPage1', {\r\n        param: {\r\n          name: this.name\r\n        },\r\n        pageNum: this.pageNum,\r\n        pageSize: this.pageSize\r\n      }).then(res => res.data).then(res => {\r\n        console.log(res.data)\r\n        if (res.code === 200) {   //判断状态码是否200\r\n          //结果集的数据传入tableData\r\n          this.tableData = res.data\r\n          this.total = res.total\r\n        } else {\r\n          alert(\"查询失败\" + res.code)\r\n        }\r\n        this.list_loading = false\r\n        // this.tableData=res.data\r\n        // console.log(res)\r\n      }).catch(e => {\r\n        console.log(e)\r\n        this.list_loading = false\r\n      })\r\n    },\r\n\r\n    //查询\r\n    search() {\r\n      //每次查询后显示第一页\r\n      this.pageNum = 1;\r\n      this.loadPost()\r\n    },\r\n\r\n    //重置参数\r\n    reSet() {\r\n      this.name = '';\r\n      this.loadPost()\r\n    },\r\n\r\n    //新增\r\n    add() {\r\n      this.title_name = '新增';\r\n      this.centerDialogVisible = true;\r\n      this.is_add = true\r\n      this.$nextTick(() => {\r\n        this.resetForm();\r\n      })\r\n    },\r\n    //点击编辑按钮，从表格拿到数据传给form\r\n    mod(row) {\r\n      this.title_name = '编辑';\r\n      this.is_add = false\r\n      this.form.id = row.id;\r\n      this.form.name = row.name;\r\n      this.form.remark = row.remark;\r\n      // this.rules.password[0].required=false;\r\n      // this.rules.checkPass.required=false;\r\n      this.centerDialogVisible = true;\r\n\r\n    },\r\n    //删除\r\n    del(id, name) {\r\n      console.log(id)\r\n      this.$confirm('是否删除当前用户信息？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n        closeOnClickModal: false\r\n      }).then(() => {\r\n        //  接口 点击确定就会走then\r\n        this.$axios.get(this.$httpUrl + '/storage/delete?id=' + id)\r\n        this.$message({\r\n          message: '删除仓库[' + name + ']成功~~~~~~~~~~~~~~~~~',\r\n          type: 'success'\r\n        })\r\n        console.log('dedede', name)\r\n        this.loadPost()\r\n\r\n      }).catch(e => {\r\n        // 取消就会走catch\r\n        console.log(e)\r\n      })\r\n    },\r\n    save() {\r\n      //输入格式正确则保存\r\n      this.$refs.form.validate((valid) => {\r\n        if (valid) {\r\n          console.log(this.form)\r\n          //开始保存\r\n          this.$axios.post(this.$httpUrl + '/storage/save', this.form).then(res => res.data).then(res => {\r\n            console.log(res.data)\r\n            if (res.code === 200) {   //判断状态码是否200\r\n              if (this.is_add) {\r\n                this.$message({\r\n                  message: '新增仓库成功~~~',\r\n                  type: 'success'\r\n                })\r\n              } else {\r\n                this.$message({\r\n                  message: '修改仓库信息成功~~~',\r\n                  type: 'success'\r\n                })\r\n              }\r\n\r\n              this.loadPost();\r\n              this.centerDialogVisible = false\r\n            } else {\r\n              //状态码不为200，保存失败\r\n              this.$message({\r\n                message: '新增仓库失败！！！',\r\n                type: 'error'\r\n              });\r\n            }\r\n          })\r\n        } else {\r\n          this.$message({\r\n            message: \"请规范填写信息\",\r\n            type: 'error'\r\n          });\r\n          return false;\r\n        }\r\n      });\r\n\r\n\r\n    },\r\n    closeDialog() {\r\n      this.centerDialogVisible = false\r\n      this.$refs.form.clearValidate()\r\n    },\r\n    resetForm() {\r\n      this.$refs.form.resetFields();\r\n    },\r\n    handleSizeChange(val) {\r\n      console.log(`每页 ${val} 条`);\r\n      this.pageSize = val;\r\n      this.pageNum = 1;\r\n      this.loadPost()\r\n    },\r\n    handleCurrentChange(val) {\r\n      console.log(`当前页: ${val}`);\r\n      this.pageNum = val;\r\n      this.loadPost()\r\n    }\r\n  },\r\n\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}