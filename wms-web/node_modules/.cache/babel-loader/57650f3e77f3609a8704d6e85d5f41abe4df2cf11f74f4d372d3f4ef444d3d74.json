{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import axios from \"axios\";axios\n\n// eslint-disable-next-line no-unused-vars\nimport { exportExcel } from \"../../../public/excelConfig\";\nimport { handleExportNum } from \"@/options/ExportExcel\";\n// import FileSaver from 'file-saver';\n// import * as XLSX from 'xlsx'\n\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: 'AdminManage',\n  data() {\n    //校验账号是否已存在\n    let checkDuplicate = (rule, value, callback) => {\n      if (this.form.id) {\n        return callback();\n      }\n      this.$axios.get(this.$httpUrl + \"/user/findByNo?no=\" + this.form.no).then(res => res.data).then(res => {\n        if (res.code !== 200) {\n          callback();\n        } else {\n          callback(new Error('账号已经存在'));\n        }\n      });\n    };\n\n    //校验密码\n    let validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.form.checkPass !== '') {\n          this.$refs.form.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    //校验两次密码是否一致\n    let validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.form.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      is_add: true,\n      title_name: '',\n      list_loading: false,\n      tableData: [],\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n      name: '',\n      sex: '',\n      role: '',\n      //下拉框\n      sexs: [{\n        value: 0,\n        label: \"1. 女\"\n      }, {\n        value: 1,\n        label: \"2. 男\"\n      }],\n      //导出excel\n      dialogVisible: false,\n      //导出选择框\n      value: 0,\n      //滑条数值\n      checked: false,\n      //是否选择全部数据导出\n      exportStep: 0,\n      //滑条步长\n\n      centerDialogVisible: false,\n      form: {\n        name: '',\n        no: '',\n        password: '',\n        checkPass: '',\n        age: '',\n        phone: '',\n        sex: '',\n        roleId: '1'\n      },\n      //表单输入规则\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入名字',\n          trigger: 'blur'\n        }],\n        no: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 8,\n          message: '长度在 3 到 8 个字符',\n          trigger: 'blur'\n        }, {\n          validator: checkDuplicate,\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 8,\n          message: '长度在 3 到 8 个字符',\n          trigger: 'blur'\n        }, {\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 8,\n          message: '长度在 3 到 8 个字符',\n          trigger: 'blur'\n        }, {\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        age: [{\n          required: true,\n          message: '请输⼊年龄',\n          trigger: 'blur'\n        }\n        // {min: 0, max: 150, message: '年龄必须在 1-150 之间', trigger: 'blur'},\n        // {pattern: /^([1-9][0-9]*){1,3}$/, message: '年龄必须为正整数字', trigger: \"blur\"},\n        // {validator: checkAge, trigger: 'blur'}\n        ],\n\n        phone: [{\n          required: true,\n          message: \"⼿机号不能为空\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^1[3|4|5|6|7|8|9][0-9]\\d{8}$/,\n          message: \"请输⼊正确的⼿机号码\",\n          trigger: \"blur\"\n        }],\n        sex: [{\n          required: true,\n          message: \"请选择性别\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  beforeMount() {\n    // this.loadGet();\n    this.loadPost();\n  },\n  methods: {\n    //导出excel\n    handle() {\n      //处理步长为十等分\n      this.dialogVisible = true;\n      this.exportStep = handleExportNum(this.total, this.exportStep);\n      console.log(this.exportStep, 'stepppppp');\n    },\n    handleClose() {\n      //关闭窗口后清除value\n      this.value = 0;\n      this.dialogVisible = false;\n    },\n    exportData() {\n      let exportNum = 0;\n      if (this.checked) {\n        exportNum = this.total;\n      } else {\n        exportNum = this.value;\n      }\n      this.dialogVisible = false;\n      this.$message.warning('正在导出数据,请稍等~');\n      this.$axios.post(this.$httpUrl + '/user/listPage1', {\n        param: {\n          name: this.name,\n          sex: this.sex,\n          roleId: 1\n        },\n        pageNum: this.pageNum,\n        pageSize: exportNum\n      }).then(res => {\n        // console.log(res, '====')\n        if (res.data.code === 200) {\n          const columns = res.data.data;\n          const columnsData = [];\n          columns.forEach(row => {\n            const sums = {\n              id: row.id,\n              no: row.no,\n              name: row.name,\n              sex: row.sex === 0 ? '女' : '男',\n              age: row.age,\n              phone: row.phone,\n              role: row.roleId === 0 ? '超级管理员' : row.roleId === 1 ? '管理员' : '用户'\n            };\n            columnsData.push(sums);\n          });\n          this.handleDownload(columnsData);\n        } else {\n          this.$message.error(res.msgs);\n        }\n      });\n    },\n    handleDownload(tableData) {\n      import('@/options/ExportExcel').then(excel => {\n        const tHeader = ['id', '账号', '姓名', '性别', '年龄', '手机号码', '角色'];\n        const filterVal = ['id', 'no', 'name', 'sex', 'age', 'phone', 'role'];\n        const data = this.formatJson(filterVal, tableData);\n        const date = new Date();\n        const y = date.getFullYear();\n        let m = date.getMonth() + 1;\n        let d = date.getDate();\n        let h = date.getHours();\n        let mm = date.getMinutes();\n        let s = date.getSeconds();\n        const time = y + '-' + m + '-' + d + ' ' + h + ':' + mm + ':' + s;\n        excel.export_json_to_excel({\n          header: tHeader,\n          data,\n          filename: `管理员列表(${time})`\n        });\n        this.$message.success('导出成功');\n      });\n    },\n    formatJson(filterVal, jsonData) {\n      return jsonData.map(v => filterVal.map(j => {\n        const temp_keys = j.split('.');\n        if (temp_keys.length > 1) {\n          let temp_result = v;\n          for (const m of temp_keys) {\n            temp_result = temp_result[m] ? temp_result[m] : '';\n            if (temp_result === '') break;\n          }\n          return temp_result;\n        } else {\n          return v[j];\n        }\n      }));\n    },\n    loadGet() {\n      this.$axios.get(this.$httpUrl + '/user/list').then(res => res.data).then(res => {\n        console.log(res);\n      });\n    },\n    //点击表单的取消按钮，清除验证结果\n\n    loadPost() {\n      this.list_loading = true;\n      this.$axios.post(this.$httpUrl + '/user/listPage1', {\n        param: {\n          name: this.name,\n          sex: this.sex,\n          roleId: 1\n        },\n        pageNum: this.pageNum,\n        pageSize: this.pageSize\n      }).then(res => res.data).then(res => {\n        console.log(res.data);\n        if (res.code === 200) {\n          //判断状态码是否200\n          //结果集的数据传入tableData\n          this.tableData = res.data;\n          this.total = res.total;\n        } else {\n          alert(\"查询失败\" + res.code);\n        }\n        this.list_loading = false;\n        // this.tableData=res.data\n        // console.log(res)\n      }).catch(e => {\n        console.log(e);\n        this.list_loading = false;\n      });\n    },\n    //查询\n    search() {\n      //每次查询后显示第一页\n      this.pageNum = 1;\n      this.loadPost();\n    },\n    //重置参数\n    reSet() {\n      this.name = '';\n      this.sex = '';\n      this.loadPost();\n    },\n    //新增\n    add() {\n      this.title_name = '新增';\n      this.centerDialogVisible = true;\n      this.is_add = true;\n      this.$nextTick(() => {\n        this.resetForm();\n      });\n    },\n    //点击编辑按钮，从表格拿到数据传给form\n    mod(row) {\n      this.title_name = '编辑';\n      this.is_add = false;\n      this.form.id = row.id;\n      this.form.no = row.no;\n      this.form.name = row.name;\n      this.form.password = '';\n      this.form.age = row.age;\n      this.form.phone = row.phone;\n      this.form.sex = row.sex;\n      this.form.roleId = 1;\n      // this.rules.password[0].required=false;\n      // this.rules.checkPass.required=false;\n      this.centerDialogVisible = true;\n    },\n    //删除\n    del(id, name) {\n      console.log(id);\n      this.$confirm('是否删除当前用户信息？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n        closeOnClickModal: false\n      }).then(() => {\n        //  接口 点击确定就会走then\n        this.$axios.get(this.$httpUrl + '/user/delete?id=' + id);\n        this.$message({\n          message: '删除用户[' + name + ']成功~~~~~~~~~~~~~~~~~',\n          type: 'success'\n        });\n        console.log('dedede', name);\n        this.loadPost();\n      }).catch(e => {\n        // 取消就会走catch\n        console.log(e);\n      });\n    },\n    save() {\n      //输入格式正确则保存\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          console.log(this.form);\n          //开始保存\n          this.$axios.post(this.$httpUrl + '/user/save', this.form).then(res => res.data).then(res => {\n            console.log(res.data);\n            if (res.code === 200) {\n              //判断状态码是否200\n              if (this.is_add) {\n                this.$message({\n                  message: '新增用户成功~~~',\n                  type: 'success'\n                });\n              } else {\n                this.$message({\n                  message: '修改用户信息成功~~~',\n                  type: 'success'\n                });\n              }\n              this.loadPost();\n              this.centerDialogVisible = false;\n            } else {\n              //状态码不为200，保存失败\n              this.$message({\n                message: '新增用户失败！！！',\n                type: 'error'\n              });\n            }\n          });\n        } else {\n          this.$message({\n            message: \"请规范填写信息\",\n            type: 'error'\n          });\n          return false;\n        }\n      });\n    },\n    closeDialog() {\n      this.centerDialogVisible = false;\n      this.$refs.form.clearValidate();\n    },\n    resetForm() {\n      this.form.id = '';\n      this.form.roleId = 1;\n      this.form.name = '';\n      this.form.password = '';\n      this.form.sex = '';\n      this.form.age = '';\n      this.form.phone = '';\n      this.form.no = '';\n    },\n    handleSizeChange(val) {\n      console.log(`每页 ${val} 条`);\n      this.pageSize = val;\n      this.pageNum = 1;\n      this.loadPost();\n    },\n    handleCurrentChange(val) {\n      console.log(`当前页: ${val}`);\n      this.pageNum = val;\n      this.loadPost();\n    }\n  }\n};","map":{"version":3,"mappings":";AAiKA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;EAEA;EACAA;EACAC;IAEA;IACA;MACA;QACA;MACA;MACA;QACA;UACAC;QACA;UACAA;QACA;MACA;IACA;;IAEA;IACA;MACA;QACAA;MACA;QACA;UACA;QACA;QACAA;MACA;IACA;IACA;IACA;MACA;QACAA;MACA;QACAA;MACA;QACAA;MACA;IACA;IAEA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAT;MACAU;MACAC;MAEA;MACAC,OACA;QACAC;QACAC;MACA,GACA;QACAD;QACAC;MACA,EACA;MACA;MACAC;MAAA;MACAF;MAAA;MACAG;MAAA;MACAC;MAAA;;MAEAC;MACAC;QACAnB;QACAoB;QACAC;QACAC;QACAC;QACAC;QACAd;QACAe;MACA;MACA;MACAC;QACA1B,OACA;UAAA2B;UAAAC;UAAAC;QAAA,EACA;QACAT,KACA;UAAAO;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,GACA;UAAAG;UAAAH;QAAA,EACA;QACAR,WACA;UAAAM;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,GACA;UAAAG;UAAAH;QAAA,EACA;QACAP,YACA;UAAAK;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,GACA;UAAAG;UAAAH;QAAA,EACA;QACAN,MACA;UAAAI;UAAAC;UAAAC;QAAA;QACA;QACA;QACA;QAAA,CACA;;QACAL,QACA;UAAAG;UAAAC;UAAAC;QAAA,GACA;UAAAI;UAAAL;UAAAC;QAAA,EACA;QACAnB,MACA;UAAAiB;UAAAC;UAAAC;QAAA;MAEA;IACA;EACA;EACAK;IACA;IACA;EACA;EACAC;IAEA;IACAC;MAAA;MACA;MACA;MAEAC;IAEA;IACAC;MAAA;MACA;MACA;IACA;IAEAC;MACA;MACA;QACAC;MACA;QACAA;MACA;MACA;MACA;MACA;QACAC;UACAzC;UACAU;UACAe;QACA;QACAlB;QACAC;MACA;QACA;QACA;UACA;UACA;UACAkC;YACA;cACAC;cACAvB;cACApB;cACAU;cACAa;cACAC;cACAb;YACA;YACAiC;UACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAC;MACA;QACA,iBACA,MACA,MACA,MACA,MACA,MACA,QACA,KACA;QAEA,mBACA,MACA,MACA,QACA,OACA,OACA,SACA,OACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACAC;UACAC;UACA9C;UACA+C;QACA;QACA;MACA;IACA;IACAC;MACA,yBACAC;QACA;QACA;UACA;UACA;YACAC;YACA;UACA;UACA;QACA;UACA;QACA;MACA,GACA;IACA;IAGAC;MACA;QACAf;MACA;IACA;IACA;;IAEAgB;MAEA;MACA;QACAZ;UACAzC;UACAU;UACAe;QACA;QACAlB;QACAC;MACA;QACA6B;QACA;UAAA;UACA;UACA;UACA;QACA;UACAiB;QACA;QACA;QACA;QACA;MACA;QACAjB;QACA;MACA;IACA;IAEA;IACAkB;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;MACA;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAEA;IACA;IACAC;MACAtB;MACA;QACAuB;QACAC;QACAC;QACAC;MACA;QACA;QACA;QACA;UACAnC;UACAkC;QACA;QACAzB;QACA;MAEA;QACA;QACAA;MACA;IACA;IACA2B;MACA;MACA;QACA;UACA3B;UACA;UACA;YACAA;YACA;cAAA;cACA;gBACA;kBACAT;kBACAkC;gBACA;cACA;gBACA;kBACAlC;kBACAkC;gBACA;cACA;cAEA;cACA;YACA;cACA;cACA;gBACAlC;gBACAkC;cACA;YACA;UACA;QACA;UACA;YACAlC;YACAkC;UACA;UACA;QACA;MACA;IAGA;IACAG;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACA9B;MACA;MACA;MACA;IACA;IACA+B;MACA/B;MACA;MACA;IACA;EACA;AAEA","names":["name","data","callback","is_add","title_name","list_loading","tableData","pageNum","pageSize","total","sex","role","sexs","value","label","dialogVisible","checked","exportStep","centerDialogVisible","form","no","password","checkPass","age","phone","roleId","rules","required","message","trigger","min","max","validator","pattern","beforeMount","methods","handle","console","handleClose","exportData","exportNum","param","columns","id","columnsData","handleDownload","excel","header","filename","formatJson","filterVal","temp_result","loadGet","loadPost","alert","search","reSet","add","mod","del","confirmButtonText","cancelButtonText","type","closeOnClickModal","save","closeDialog","resetForm","handleSizeChange","handleCurrentChange"],"sourceRoot":"src/components/admin","sources":["AdminManage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"margin-bottom: 5px\">\r\n      <span style=\"margin-left: 5px;font-size: 14px;color: #3f3f3f\">姓名：</span>\r\n      <el-input placeholder=\"请输入名字\"\r\n                v-model=\"name\"\r\n                suffix-icon=\"el-icon-search\"\r\n                style=\"width: 160px\"\r\n                @keyup.enter.native=\"search\">\r\n      </el-input>\r\n      <span style=\"margin-left: 20px;font-size: 14px;color: #3f3f3f\">性别：</span>\r\n      <el-select v-model=\"sex\" filterable clearable placeholder=\"请选择性别\" style=\"margin-left: 5px; width: 120px\">\r\n        <el-option\r\n            v-for=\"item in sexs\"\r\n            :key=\"item.value\"\r\n            :label=\"item.label\"\r\n            :value=\"item.value\">\r\n        </el-option>\r\n      </el-select>\r\n      <el-button type=\"primary\" icon=\"el-icon-refresh-right\" @click=\"reSet\"></el-button>\r\n      <el-button style=\"margin-left: 5px\" icon=\"el-icon-search\" @click=\"search\" type=\"primary\"></el-button>\r\n\r\n      <span style=\"margin-left:432px\">操作：</span>\r\n      <el-button type=\"primary\" icon=\"el-icon-circle-plu\" @click=\"add\"></el-button>\r\n      <el-button type=\"primary\" @click=\"handle\" round>导出</el-button>\r\n      <el-dialog\r\n          :before-close=\"handleClose\"\r\n          title=\"请选择导出条数\"\r\n          :close-on-click-modal=\"false\"\r\n          :visible.sync=\"dialogVisible\"\r\n          width=\"40%\">\r\n        <span>共{{this.total}}条数据</span>\r\n        <div class=\"block\">\r\n          <el-slider\r\n              input-size=\"mini\"\r\n              v-model=\"value\"\r\n              show-input\r\n              :step=this.exportStep\r\n              :max=this.total\r\n              show-stops\r\n          >\r\n          </el-slider>\r\n          <el-checkbox v-model=\"checked\" >选择全部结果（{{this.total}}）条</el-checkbox>\r\n        </div>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"handleClose\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"exportData\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n    </div>\r\n\r\n    <el-table v-loading=\"list_loading\"\r\n              id=\"adminable\"\r\n              height=550\r\n              style=\"font-size: 15px\"\r\n              :data=\"tableData\"\r\n              :header-cell-style=\"{background:'#d7d7d7',color:'#564d4d'}\"\r\n              border>\r\n      <el-table-column prop=\"id\" label=\"id\" sortable width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"no\" label=\"账号\" sortable width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"name\" label=\"姓名\" sortable width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"sex\" label=\"性别\" sortable width=\"80\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag\r\n              :type=\"scope.row.sex === 1 ? 'primary' : 'danger'\"\r\n              disable-transitions>{{ scope.row.sex === 1 ? '男' : '女' }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"age\" label=\"年龄\" sortable width=\"80\"></el-table-column>\r\n      <el-table-column prop=\"phone\" label=\"电话\" sortable width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"roleId\" label=\"角色\" sortable width=\"140 \">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag\r\n              :type=\"scope.row.roleId === 0 ? 'danger' : (scope.row.roleId === 1 ? 'success' : 'primary')\"\r\n              disable-transitions>{{ scope.row.roleId === 0 ? '超级管理员' : (scope.row.roleId === 1 ? '管理员' : '用户') }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"operation\" label=\"操作\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"primary\" icon=\"el-icon-edit\" @click=\"mod(scope.row)\"></el-button>\r\n          <el-button type=\"danger\" icon=\"el-icon-delete\"  @click=\"del(scope.row.id,scope.row.name)\"></el-button>\r\n        </template>\r\n      </el-table-column>\r\n      <template slot=\"empty\">\r\n        <el-empty :image-size=\"180\"></el-empty>\r\n      </template>\r\n\r\n    </el-table>\r\n    <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"pageNum\"\r\n        :page-sizes=\"[10,20,50, 100, 200]\"\r\n        :page-size=\"pageSize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\">\r\n    </el-pagination>\r\n    <el-dialog\r\n        :title=\"title_name\"\r\n        :visible.sync=\"centerDialogVisible\"\r\n        :close-on-click-modal=\"false\"\r\n        width=\"30%\"\r\n        center\r\n        :before-close=\"closeDialog\"\r\n\r\n    >\r\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\r\n        <el-form-item label=\"姓名\" prop=\"name\">\r\n          <el-col :span=\"15\">\r\n            <el-input v-model=\"form.name\"></el-input>\r\n          </el-col>\r\n        </el-form-item>\r\n        <el-form-item label=\"账号\" prop=\"no\"\r\n\r\n        >\r\n          <el-col :span=\"15\">\r\n            <el-input v-model=\"form.no\"\r\n                      :disabled=\"!is_add\"></el-input>\r\n          </el-col>\r\n        </el-form-item>\r\n        <el-form-item v-if=\"is_add\" label=\"密码\" prop=\"password\">\r\n          <el-col :span=\"15\">\r\n            <el-input type=\"password\" v-model=\"form.password\" autocomplete=\"off\"></el-input>\r\n          </el-col>\r\n        </el-form-item>\r\n        <el-form-item v-if=\"is_add\" label=\"确认密码\" prop=\"checkPass\">\r\n          <el-col :span=\"15\">\r\n            <el-input type=\"password\" v-model=\"form.checkPass\" autocomplete=\"off\"></el-input>\r\n          </el-col>\r\n        </el-form-item>\r\n        <el-form-item label=\"年龄\" prop=\"age\">\r\n          <el-col :span=\"15\">\r\n            <el-input v-model=\"form.age\"></el-input>\r\n          </el-col>\r\n        </el-form-item>\r\n        <el-form-item label=\"电话\" prop=\"phone\">\r\n          <el-col :span=\"15\">\r\n            <el-input v-model=\"form.phone\"></el-input>\r\n          </el-col>\r\n        </el-form-item>\r\n        <el-form-item label=\"性别\" prop=\"sex\">\r\n          <el-radio-group v-model=\"form.sex\">\r\n            <el-radio :label=\"1\">男</el-radio>\r\n            <el-radio :label=\"0\">女</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n    <el-button @click=\"closeDialog\">取 消</el-button>\r\n    <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n  </span>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\n// import axios from \"axios\";axios\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nimport {exportExcel} from \"../../../public/excelConfig\";\r\nimport {handleExportNum} from \"@/options/ExportExcel\";\r\n// import FileSaver from 'file-saver';\r\n// import * as XLSX from 'xlsx'\r\n\r\nexport default {\r\n\r\n  // eslint-disable-next-line vue/multi-word-component-names\r\n  name: 'AdminManage',\r\n  data() {\r\n\r\n    //校验账号是否已存在\r\n    let checkDuplicate = (rule, value, callback) => {\r\n      if (this.form.id) {\r\n        return callback();\r\n      }\r\n      this.$axios.get(this.$httpUrl + \"/user/findByNo?no=\" + this.form.no).then(res => res.data).then(res => {\r\n        if (res.code !== 200) {\r\n          callback()\r\n        } else {\r\n          callback(new Error('账号已经存在'));\r\n        }\r\n      })\r\n    };\r\n\r\n    //校验密码\r\n    let validatePass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'));\r\n      } else {\r\n        if (this.form.checkPass !== '') {\r\n          this.$refs.form.validateField('checkPass');\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    //校验两次密码是否一致\r\n    let validatePass2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'));\r\n      } else if (value !== this.form.password) {\r\n        callback(new Error('两次输入密码不一致!'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    return {\r\n      is_add: true,\r\n      title_name: '',\r\n      list_loading: false,\r\n      tableData: [],\r\n      pageNum: 1,\r\n      pageSize: 10,\r\n      total: 0,\r\n      name: '',\r\n      sex: '',\r\n      role: '',\r\n\r\n      //下拉框\r\n      sexs: [\r\n        {\r\n          value: 0,\r\n          label: \"1. 女\",\r\n        },\r\n        {\r\n          value: 1,\r\n          label: \"2. 男\"\r\n        }\r\n      ],\r\n      //导出excel\r\n      dialogVisible: false, //导出选择框\r\n      value: 0, //滑条数值\r\n      checked: false,  //是否选择全部数据导出\r\n      exportStep: 0,  //滑条步长\r\n\r\n      centerDialogVisible: false,\r\n      form: {\r\n        name: '',\r\n        no: '',\r\n        password: '',\r\n        checkPass: '',\r\n        age: '',\r\n        phone: '',\r\n        sex: '',\r\n        roleId: '1'\r\n      },\r\n      //表单输入规则\r\n      rules: {\r\n        name: [\r\n          {required: true, message: '请输入名字', trigger: 'blur'},\r\n        ],\r\n        no: [\r\n          {required: true, message: '请输入账号', trigger: 'blur'},\r\n          {min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur'},\r\n          {validator: checkDuplicate, trigger: \"blur\"}\r\n        ],\r\n        password: [\r\n          {required: true, message: '请输入密码', trigger: 'blur'},\r\n          {min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur'},\r\n          {validator: validatePass, trigger: 'blur'}\r\n        ],\r\n        checkPass: [\r\n          {required: true, message: '请输入密码', trigger: 'blur'},\r\n          {min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur'},\r\n          {validator: validatePass2, trigger: 'blur'}\r\n        ],\r\n        age: [\r\n          {required: true, message: '请输⼊年龄', trigger: 'blur'},\r\n          // {min: 0, max: 150, message: '年龄必须在 1-150 之间', trigger: 'blur'},\r\n          // {pattern: /^([1-9][0-9]*){1,3}$/, message: '年龄必须为正整数字', trigger: \"blur\"},\r\n          // {validator: checkAge, trigger: 'blur'}\r\n        ],\r\n        phone: [\r\n          {required: true, message: \"⼿机号不能为空\", trigger: \"blur\"},\r\n          {pattern: /^1[3|4|5|6|7|8|9][0-9]\\d{8}$/, message: \"请输⼊正确的⼿机号码\", trigger: \"blur\"}\r\n        ],\r\n        sex: [\r\n          {required: true, message: \"请选择性别\", trigger: \"blur\"}\r\n        ]\r\n      },\r\n    }\r\n  },\r\n  beforeMount() {\r\n    // this.loadGet();\r\n    this.loadPost();\r\n  },\r\n  methods: {\r\n\r\n    //导出excel\r\n    handle() {    //处理步长为十等分\r\n      this.dialogVisible = true\r\n      this.exportStep = handleExportNum(this.total, this.exportStep)\r\n\r\n      console.log(this.exportStep,'stepppppp')\r\n\r\n    },\r\n    handleClose(){    //关闭窗口后清除value\r\n      this.value = 0;\r\n      this.dialogVisible = false\r\n    },\r\n\r\n    exportData() {\r\n      let exportNum = 0\r\n      if (this.checked){\r\n        exportNum = this.total\r\n      }else {\r\n        exportNum = this.value\r\n      }\r\n      this.dialogVisible = false\r\n      this.$message.warning('正在导出数据,请稍等~')\r\n      this.$axios.post(this.$httpUrl + '/user/listPage1', {\r\n        param: {\r\n          name: this.name,\r\n          sex: this.sex,\r\n          roleId: 1\r\n        },\r\n        pageNum: this.pageNum,\r\n        pageSize: exportNum\r\n      }).then(res => {\r\n        // console.log(res, '====')\r\n        if (res.data.code === 200) {\r\n          const columns = res.data.data\r\n          const columnsData = []\r\n          columns.forEach((row) => {\r\n            const sums = {\r\n              id: row.id,\r\n              no: row.no,\r\n              name: row.name,\r\n              sex: row.sex === 0 ? '女' : '男',\r\n              age: row.age,\r\n              phone: row.phone,\r\n              role: row.roleId === 0 ? '超级管理员' : row.roleId === 1 ? '管理员' : '用户'\r\n            }\r\n            columnsData.push(sums)\r\n          })\r\n          this.handleDownload(columnsData)\r\n        } else {\r\n          this.$message.error(res.msgs)\r\n        }\r\n      })\r\n    },\r\n    handleDownload(tableData) {\r\n      import('@/options/ExportExcel').then((excel) => {\r\n        const tHeader = [\r\n          'id',\r\n          '账号',\r\n          '姓名',\r\n          '性别',\r\n          '年龄',\r\n          '手机号码',\r\n          '角色'\r\n        ]\r\n\r\n        const filterVal = [\r\n          'id',\r\n          'no',\r\n          'name',\r\n          'sex',\r\n          'age',\r\n          'phone',\r\n          'role'\r\n        ]\r\n        const data = this.formatJson(filterVal, tableData)\r\n        const date = new Date()\r\n        const y = date.getFullYear()\r\n        let m = date.getMonth() + 1\r\n        let d = date.getDate()\r\n        let h = date.getHours()\r\n        let mm = date.getMinutes()\r\n        let s = date.getSeconds()\r\n        const time = y + '-' + m + '-' + d + ' ' + h + ':' + mm + ':' + s\r\n        excel.export_json_to_excel({\r\n          header: tHeader,\r\n          data,\r\n          filename: `管理员列表(${time})`\r\n        })\r\n        this.$message.success('导出成功')\r\n      })\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map((v) =>\r\n          filterVal.map((j) => {\r\n            const temp_keys = j.split('.')\r\n            if (temp_keys.length > 1) {\r\n              let temp_result = v\r\n              for (const m of temp_keys) {\r\n                temp_result = temp_result[m] ? temp_result[m] : ''\r\n                if (temp_result === '') break\r\n              }\r\n              return temp_result\r\n            } else {\r\n              return v[j]\r\n            }\r\n          })\r\n      )\r\n    },\r\n\r\n\r\n    loadGet() {\r\n      this.$axios.get(this.$httpUrl + '/user/list').then(res => res.data).then(res => {\r\n        console.log(res)\r\n      })\r\n    },\r\n    //点击表单的取消按钮，清除验证结果\r\n\r\n    loadPost() {\r\n\r\n      this.list_loading = true\r\n      this.$axios.post(this.$httpUrl + '/user/listPage1', {\r\n        param: {\r\n          name: this.name,\r\n          sex: this.sex,\r\n          roleId: 1\r\n        },\r\n        pageNum: this.pageNum,\r\n        pageSize: this.pageSize\r\n      }).then(res => res.data).then(res => {\r\n        console.log(res.data)\r\n        if (res.code === 200) {   //判断状态码是否200\r\n          //结果集的数据传入tableData\r\n          this.tableData = res.data\r\n          this.total = res.total\r\n        } else {\r\n          alert(\"查询失败\" + res.code)\r\n        }\r\n        this.list_loading = false\r\n        // this.tableData=res.data\r\n        // console.log(res)\r\n      }).catch(e => {\r\n        console.log(e)\r\n        this.list_loading = false\r\n      })\r\n    },\r\n\r\n    //查询\r\n    search() {\r\n      //每次查询后显示第一页\r\n      this.pageNum = 1;\r\n      this.loadPost()\r\n    },\r\n\r\n    //重置参数\r\n    reSet() {\r\n      this.name = '';\r\n      this.sex = '';\r\n      this.loadPost()\r\n    },\r\n\r\n    //新增\r\n    add() {\r\n      this.title_name = '新增';\r\n      this.centerDialogVisible = true;\r\n      this.is_add = true\r\n      this.$nextTick(() => {\r\n        this.resetForm();\r\n      })\r\n    },\r\n    //点击编辑按钮，从表格拿到数据传给form\r\n    mod(row) {\r\n      this.title_name = '编辑';\r\n      this.is_add = false\r\n      this.form.id = row.id;\r\n      this.form.no = row.no;\r\n      this.form.name = row.name;\r\n      this.form.password = '';\r\n      this.form.age = row.age;\r\n      this.form.phone = row.phone;\r\n      this.form.sex = row.sex;\r\n      this.form.roleId = 1\r\n      // this.rules.password[0].required=false;\r\n      // this.rules.checkPass.required=false;\r\n      this.centerDialogVisible = true;\r\n\r\n    },\r\n    //删除\r\n    del(id, name) {\r\n      console.log(id)\r\n      this.$confirm('是否删除当前用户信息？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n        closeOnClickModal: false\r\n      }).then(() => {\r\n        //  接口 点击确定就会走then\r\n        this.$axios.get(this.$httpUrl + '/user/delete?id=' + id)\r\n        this.$message({\r\n          message: '删除用户[' + name + ']成功~~~~~~~~~~~~~~~~~',\r\n          type: 'success'\r\n        })\r\n        console.log('dedede', name)\r\n        this.loadPost()\r\n\r\n      }).catch(e => {\r\n        // 取消就会走catch\r\n        console.log(e)\r\n      })\r\n    },\r\n    save() {\r\n      //输入格式正确则保存\r\n      this.$refs.form.validate((valid) => {\r\n        if (valid) {\r\n          console.log(this.form)\r\n          //开始保存\r\n          this.$axios.post(this.$httpUrl + '/user/save', this.form).then(res => res.data).then(res => {\r\n            console.log(res.data)\r\n            if (res.code === 200) {   //判断状态码是否200\r\n              if (this.is_add) {\r\n                this.$message({\r\n                  message: '新增用户成功~~~',\r\n                  type: 'success'\r\n                })\r\n              } else {\r\n                this.$message({\r\n                  message: '修改用户信息成功~~~',\r\n                  type: 'success'\r\n                })\r\n              }\r\n\r\n              this.loadPost();\r\n              this.centerDialogVisible = false\r\n            } else {\r\n              //状态码不为200，保存失败\r\n              this.$message({\r\n                message: '新增用户失败！！！',\r\n                type: 'error'\r\n              });\r\n            }\r\n          })\r\n        } else {\r\n          this.$message({\r\n            message: \"请规范填写信息\",\r\n            type: 'error'\r\n          });\r\n          return false;\r\n        }\r\n      });\r\n\r\n\r\n    },\r\n    closeDialog() {\r\n      this.centerDialogVisible = false\r\n      this.$refs.form.clearValidate()\r\n    },\r\n    resetForm() {\r\n      this.form.id = '';\r\n      this.form.roleId = 1;\r\n      this.form.name = '';\r\n      this.form.password = '';\r\n      this.form.sex = '';\r\n      this.form.age = '';\r\n      this.form.phone = '';\r\n      this.form.no = '';\r\n    },\r\n    handleSizeChange(val) {\r\n      console.log(`每页 ${val} 条`);\r\n      this.pageSize = val;\r\n      this.pageNum = 1;\r\n      this.loadPost()\r\n    },\r\n    handleCurrentChange(val) {\r\n      console.log(`当前页: ${val}`);\r\n      this.pageNum = val;\r\n      this.loadPost()\r\n    }\r\n  },\r\n\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}